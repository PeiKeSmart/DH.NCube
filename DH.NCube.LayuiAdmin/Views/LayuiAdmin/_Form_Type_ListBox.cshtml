@model ListBoxModel
@using NewLife;
@using NewLife.Cube
@using XCode;
@using XCode.Configuration;
@using System.Collections;

@{
    var name = Model.Name;
    var value = Model.Value;
    var type = value.GetType();

    var selectedValues = Model.SelectedValues as String;
    var selectedList = selectedValues?.Split(",");

    var atts = HtmlHelper.AnonymousObjectToHtmlAttributes(Model.HtmlAttributes);
    if (NewLife.Cube.CubeSetting.Current.BootstrapSelect)
        atts.Add("class", "form-select form-select-sm");
    else
        atts.Add("class", "form-select form-select-sm");

}

@if (value is IEnumerable<SelectListItem> selectList)
{
    @Html.ListBox(name, selectList, atts)
}
else if (type is IEnumerable data && type.GetElementTypeEx().As(typeof(IEntity)))
{
    IEntityFactory factory = null;
    var dic = new Dictionary<String, String>();
    foreach (IEntity entity in data)
    {
        if (factory == null) factory = entity.GetType().AsFactory();

        var key = entity[factory.Unique.Name] + "";
        dic[key] = entity + "";
    }
    atts.Add("data-control", "select2");
    atts.Add("data-allow-clear", "true");
    @Html.ListBox(name, new MultiSelectList(dic, "Key", "Value", selectedList), atts)
}
else if (value is IDictionary dic)
{
    atts.Add("data-control", "select2");
    atts.Add("data-allow-clear", "true");
    @Html.ListBox(name, new MultiSelectList(dic, "Key", "Value", selectedList), atts)
}
else if (value is IEnumerable items)
{
    atts.Add("data-control", "select2");
    atts.Add("data-allow-clear", "true");
    @Html.ListBox(name, new MultiSelectList(items, selectedList), atts)
}
